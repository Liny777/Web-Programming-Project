{"version":3,"sources":["components/Header.jsx","components/PostThumbnail.jsx","pages/Home.jsx","pages/MessageBoard.jsx","pages/PostDetail.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","to","type","PostThumbnail","post","id","width","margin","src","featureImageUrl","alt","title","description","Home","posts","map","MessageBoard","useState","messages","setMessages","useEffect","fetch","then","res","json","catch","ex","console","error","marginBottom","placeholder","onClick","e","preventDefault","email","document","getElementById","value","message","d","Date","setHours","getHours","getMinutes","getTimezoneOffset","time","toISOString","method","body","JSON","stringify","msg","class","text","PostDetail","postId","useParams","find","p","marginTop","contents","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf33ebe8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <div className=\"header flex\" style={{}}>\n        <h1 >Welcome to 1155169171 Blog</h1>\n      <div>\n        <Link to=\"/\">\n          <button type=\"button\" className=\"btn btn-primary\">\n            Home\n          </button>\n        </Link>\n        <Link to=\"/message-board\">\n          <button className=\"btn btn-primary\">Message Board</button>\n        </Link>\n      </div>\n      </div>\n  );\n};\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\n\nconst PostThumbnail = ({ post }) => {\n  return (\n    <Link to={`/posts/${post.id}`}>\n      <div className=\"card\" style={{ width: \"80%\", margin: \"16px auto\" }}>\n        <img className=\"card-img-top\" src={post.featureImageUrl} alt=\"\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{post.title}</h5>\n          <p className=\"card-text\">{post.description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default PostThumbnail;\n","import React from \"react\";\nimport PostThumbnail from \"../components/PostThumbnail\";\n\nimport posts from \"../posts.json\";\n\nconst Home = () => {\n  return (\n    <div className=\"page home\">\n      {posts.map(post => <PostThumbnail post={post} />)}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\n\nconst MessageBoard = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/.netlify/functions/messages\")\n      .then((res) => res.json())\n      .then((json) => setMessages(json))\n      .catch((ex) => console.error(ex));\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const message = document.getElementById(\"message\").value;\n    var d = new Date();\n    d.setHours(d.getHours(), d.getMinutes() - d.getTimezoneOffset());\n    var time = d.toISOString();\n\n    fetch(\"/.netlify/functions/messages\", {\n      // fetch(\"/.netlify/functions/demo\",{\n      method: \"POST\",\n      body: JSON.stringify({ email, message,time }),\n    })\n      .then((res) => res.json())\n      .then((json) =>   setMessages(json))\n      .catch((ex) => console.error(ex));\n  };\n\n  return (\n    <div className=\"page message-board\">\n      <div style={{ marginBottom: \"16px\" }}>\n        <form>\n          <div className=\"form-group\">\n            <label>Email address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"name@example.com\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Message</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"message\"\n              placeholder=\"your message\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={onSubmit}>\n            Submit\n          </button>\n        </form>\n      </div>\n      <div className=\"list\">\n        {messages.map((msg) => (\n          // <div className=\"card\" key={msg._id}>\n          <div class = 'card' >\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{msg.email}</h5>\n              <p className=\"card-text\">{msg.text}</p>\n              <p className=\"card-subtitle\">{msg.time}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageBoard;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport posts from \"../posts.json\";\n\nconst PostDetail = () => {\n  let { postId } = useParams();\n\n  const post = posts.find((p) => p.id === postId);\n\n  return (\n    <div className=\"page post-detail\">\n      <div style={{ marginTop: \"16px\", marginBottom: \"16px\" }}>\n        <Link to=\"/\">\n          <button class=\"btn btn-secondary\">Back</button>\n        </Link>\n      </div>\n      <div>\n        <h1>{post.title}</h1>\n        <p>{post.contents}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetail;\n","// import { useState } from \"react\";\n// import \"./App.css\";\n\n// function App() {\n//   const [message, setMessage] = useState(\"Ready...\");\n\n//   const onDemoClick = () => {\n//     fetch(\"/.netlify/functions/demo\")\n//       .then((res) => res.json())\n//       .then((json) => {\n//         console.log(json);\n//         setMessage(json.value);\n//       })\n//       .catch((err) => console.error(err));\n//   };\n\n//   return (\n//     <div className=\"App\">\n//         <header className=\"App-header\">\n//         <img src={tsIcon} className=\"App-logo\" alt=\"logo\" />\n//       <button onClick={onDemoClick}>Demo Button</button>\n//       </header>\n//       <p>{message}</p>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { useState } from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router,Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header.jsx\";\nimport Home from \"./pages/Home.jsx\";\nimport MessageBoard from \"./pages/MessageBoard.jsx\";\nimport PostDetail from \"./pages/PostDetail.jsx\";\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/message-board\" element={<MessageBoard/>}/>\n          <Route path=\"/posts/:postId\" element={<PostDetail/>}/>\n          <Route path=\"/\" element={<Home/>}/>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}